{"version":3,"sources":["components/Loader/Loader.jsx","components/SearchBar/SearchBar.jsx","services/api.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","App.js","index.js"],"names":["Spinner","type","color","height","width","timeout","SearchBar","onSubmit","className","e","preventDefault","target","elements","searchImage","value","toLowerCase","name","autoComplete","autoFocus","placeholder","fetchImages","page","a","axios","get","response","data","hits","ImageGalleryItem","image","id","webformatURL","tags","src","alt","ImageGallery","images","console","log","map","Button","onClick","App","state","error","status","handleFormSubmit","setState","handleButtonLoadMore","p","prevProps","prevState","this","trim","length","toast","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIe,SAASA,IACpB,OAAQ,cAAC,IAAD,CACRC,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,M,WCmBEC,EA1BG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAOpB,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaD,SAPX,SAAAE,GACnBA,EAAEC,iBACFH,EAASE,EAAEE,OAAOC,SAASC,YAAYC,MAAMC,gBAK5C,UACD,wBAAQd,KAAK,SAASO,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBAAOA,UAAU,mBACZP,KAAK,OACLe,KAAK,cACPC,aAAa,MACfC,WAAS,EACTC,YAAY,mC,iBCnBJC,EAAW,uCAAG,WAAOJ,EAAMK,GAAb,eAAAC,EAAA,sEACAC,IAAMC,IAAN,qCAAwCR,EAAxC,iBAAqDK,EAArD,gGADA,cACjBI,EADiB,yBAEhBA,EAASC,KAAKC,MAFE,2CAAH,wDCFT,SAASC,EAAT,GAAqC,IAATC,EAAQ,EAARA,MAChCC,EAAyBD,EAAzBC,GAAGC,EAAsBF,EAAtBE,aAAcC,EAAQH,EAARG,KAExB,OACA,oBAAIxB,UAAU,mBAAd,SACF,qBAAKyB,IAAKF,EAAcG,IAAKF,EAAMxB,UAAU,4BADLsB,GCH1C,IAYeK,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,OAEnB,OADDC,QAAQC,IAAIF,GAEP,oBAAI5B,UAAU,eAAd,SACK4B,EAAOG,KAAI,SAAAV,GAAK,OAIb,aAHA,CAGCD,EAAD,CAAkBC,MAAOA,UCT1B,SAASW,EAAT,GAA6B,IAAXC,EAAU,EAAVA,QAC7B,OAAS,wBAAQxC,KAAK,SAASwC,QAASA,EAA/B,0B,ICOQC,E,4MACnBC,MAAQ,CACN9B,YAAa,KACbuB,OAAQ,GACRf,KAAM,EACNuB,MAAO,KACPC,OAAQ,Q,EA2BVC,iBAAmB,SAACjC,GAClB,EAAKkC,SAAS,CAAClC,iB,EAGjBmC,qBAAsB,SAACvC,GAErB,EAAKsC,UAAS,SAAAE,GAAC,MAAK,CAAC5B,KAAM4B,EAAE5B,KAAO,MACpCgB,QAAQC,IAAI,EAAKK,MAAMtB,O,+FA9BzB,WAA0B6B,EAAWC,GAArC,qBAAA7B,EAAA,2DAC0B8B,KAAKT,MAA1B9B,EADL,EACKA,YAAaQ,EADlB,EACkBA,KAER8B,EAAUtC,cAAgBA,GAAesC,EAAU9B,OAASA,EAHtE,iCAKQ+B,KAAKL,SAAS,CAACF,OAAQ,UAAWT,OAAQ,KALlD,SAM4BhB,EAAYP,EAAaQ,GANrD,UAMae,EANb,OAOOC,QAAQC,IAAIF,GACZgB,KAAKL,SAAS,CAACF,OAAQ,aAEE,KAAtBhC,EAAYwC,QAAkC,IAAlBjB,EAAOkB,OAV7C,0CAW2BC,IAAMX,MAAN,2HAAsC/B,KAXjE,QAcOuC,KAAKL,SAAS,CAACX,WAdtB,kDAiBQgB,KAAKL,SAAS,CAACF,OAAQ,aACvBU,IAAMX,MAAM,kGAlBpB,0D,6EAkCF,WACE,MAAyBQ,KAAKT,MAAvBP,EAAP,EAAOA,OAAQS,EAAf,EAAeA,OACf,OACE,gCACE,cAAC,EAAD,CAAWtC,SAAU6C,KAAKN,mBACd,YAAXD,GAAwB,cAAC7C,EAAD,IACzB,cAAC,EAAD,CAAcoC,OAAUA,IACxB,cAACI,EAAD,CAASC,QAASW,KAAKJ,uBACvB,cAAC,IAAD,W,GApD2BQ,aCHjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fe006b91.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nexport default function Spinner () {\n    return (<Loader\n    type=\"Puff\"\n    color=\"#00BFFF\"\n    height={100}\n    width={100}\n    timeout={3000} //3 secs\n  />)\n\n}","\n// import { Component } from \"react\";\n\nconst SearchBar = ({ onSubmit }) => {\n   \n  const handleSearch = e => {\n    e.preventDefault()\n    onSubmit(e.target.elements.searchImage.value.toLowerCase())\n  }\n\n return (\n   <header className=\"Searchbar\">\n     <form className=\"SearchForm\" onSubmit={handleSearch} >\n    <button type=\"submit\" className=\"SearchForm-button\">\n      <span className=\"SearchForm-button-label\">Search</span>\n    </button>\n\n    <input className=\"SearchForm-input\"\n         type=\"text\"\n         name='searchImage'\n       autoComplete=\"off\"\n     autoFocus\n     placeholder=\"Search images and photos\"\n   />\n </form>\n</header>\n )\n}\n\nexport default SearchBar\n\n// export const SearchBar = ({onSearch})=> {\n//   const handleSearch = e => {\n//     e.preventDefault();\n//     onSearch(e.target.elements.countryName.value)\n//     console.log(e.target.elements)\n//   }\n\n//   return (\n//     <header className=\"Searchbar\">\n//   <form className=\"SearchForm\" onSubmit={handleSearch}>\n//  <button type=\"submit\" className=\"SearchForm-button\">\n//        <span className=\"SearchForm-button-label\">Search</span>\n//      </button>\n\n//    <input\n//       className=\"SearchForm-input\"\n//       type=\"text\"\n//       autoComplete=\"off\"\n//       autoFocus\n//       // onChange = {this.handleNameChange}\n//       placeholder=\"Search images and photos\"\n//     />\n//   </form>\n\n// </header>\n\n//   )\n// }\n\n// export default SearchBar;\n\n\n\n\n\n// export default class SearchBar extends Component  {\n//     state = {\n//         searchImage: '',\n//         loading: false,\n//       }\n\n//       handleNameChange = e => {\n//         this.setState({searchImage : e.currentTarget.value.toLowerCase()})\n//       }\n    \n//       handleSubmit = e => {\n//         e.preventDefault();\n//         if(this.state.searchImage.trim() ==='') {\n//             return alert('нет имя')\n//         }\n//         this.props.onSubmit(this.state.searchImage)\n//         this.setState({searchImage: ''})\n//       }\n\n//     render() {\n//     return (\n//     <header className=\"Searchbar\">\n//   <form className=\"SearchForm\"  onSubmit = {this.handleSubmit}>\n//     <button type=\"submit\" className=\"SearchForm-button\">\n//       <span className=\"SearchForm-button-label\">Search</span>\n//     </button>\n\n//     <input\n//       className=\"SearchForm-input\"\n//       type=\"text\"\n//       autocomplete=\"off\"\n//       autofocus\n//       onChange = {this.handleNameChange}\n//       placeholder=\"Search images and photos\"\n//     />\n//   </form>\n\n// </header>\n//     )\n// }}\n\n","import axios from 'axios';\n\n\nexport const fetchImages = async (name, page) => {\n    const response = await axios.get(`https://pixabay.com/api/?q=${name}&page=${page}&key=22578117-98ddcf36fbc3d0da8c48aeee6&image_type=photo&orientation=horizontal&per_page=12`)\n    return response.data.hits;\n  }","\nexport default function ImageGalleryItem ({image}) {\n    const {id,webformatURL, tags} = image;\n\n    return (\n    <li className=\"ImageGalleryItem\" key={id}>\n  <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n</li>\n)\n}\n\n","import ImageGalleryItem from '../ImageGallery/ImageGalleryItem';\n\nconst ImageGallery = ({images}) =>  {\n   console.log(images)\n    return (\n        <ul className=\"ImageGallery\">\n            {images.map(image=> (\n                // <li>  <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n                // </li>\n                // <ImageGalleryItem  id={id} src={webformatURL} alt={tags}/>\n                <ImageGalleryItem image={image}/>\n            ))}  \n           </ul>)}\n            \nexport default ImageGallery;","\nexport default function Button ({onClick}) {\n    return ( <button type=\"button\" onClick={onClick}>Load more...</button>\n\n        \n        )\n    }\n\n\n    // window.scrollTo({\n    //     top: document.documentElement.scrollHeight,\n    //     behavior: 'smooth',\n    //   });","import {Component} from 'react';\nimport Spinner from './components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\n\nimport SearchBar from './components/SearchBar/SearchBar';\nimport {fetchImages} from './services/api'\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\n\nexport default class App extends Component {\n  state = {\n    searchImage: null,\n    images: [],\n    page: 1,\n    error: null,\n    status: 'idle',\n  };\n  \n\n  async componentDidUpdate (prevProps, prevState) {\nconst {searchImage, page} = this.state;\n\n        if (prevState.searchImage !== searchImage || prevState.page !== page){        \n         try{\n          this.setState({status: 'pending', images: []})\n         const images = await fetchImages(searchImage, page)\n         console.log(images)\n         this.setState({status: 'resolved'})\n\n         if(searchImage.trim() ==='' || images.length === 0) {\n                      return toast.error(`нет картинки с именем  ${searchImage}`)\n                  }\n\n         this.setState({images});  \n         }\n         catch(error){\n          this.setState({status: 'rejected'})\n          toast.error('что-то пошло не так')\n         }\n      }\n    }\n\n  handleFormSubmit = (searchImage) => {\n    this.setState({searchImage});\n  };\n\n  handleButtonLoadMore= (e)=> {\n    // e.preventDefault();\n    this.setState(p => ({page: p.page + 1}));\n    console.log(this.state.page)\n    }\n  \n\nrender(){\n  const {images, status} = this.state;\n  return ( \n    <div>\n      <SearchBar onSubmit={this.handleFormSubmit} />\n      {status === 'pending' && <Spinner />}\n      <ImageGallery images = {images}/>\n      <Button  onClick={this.handleButtonLoadMore}/>\n      <Toaster />\n    </div>\n  )\n}\n\n}\n\n// componentDidUpdate (prevProps, prevState) {\n  //     if(prevProps.searchImage !== this.state.searchImage){\n  //     this.setState({status: 'pending'})\n  //     fetch(`https://pixabay.com/api/?q=${this.state.searchImage}&page=${this.state.page}&key=22578117-98ddcf36fbc3d0da8c48aeee6&image_type=photo&orientation=horizontal&per_page=12`)\n  //     .then(response => {\n  //         if (response.ok){\n  //             return response.json();\n  //         }\n  //         return Promise.reject (\n  //             new Error (`нет картинки с именем  ${this.props.searchImage}`)\n  //     );\n  //     })\n  //     // .then(images => {return images.data.hits})\n  //     .then(images => this.setState({images: data, status: 'resolved'}))\n  //     .catch(error => this.setState({error, status: 'rejected'}))\n  //     }\n  // }\n\n//   handleFormSubmit = searchImage => {\n//     this.setState({searchImage})\n//   }\n\n//   render(){\n//     const {images, error, status} = this.state;\n// const {searchImage} = this.props;\n\n// if(status === 'idle'){\n// return <div>Введите название картинки</div>\n// }\n\n// if(status === 'pending'){\n//     return <div>Загружаю..</div>\n// }\n\n// if(status === 'rejected'){\n//     return <h1>{error.message}</h1>\n// }\n// if (status=== 'resolved'){\n// return (\n//     <div className=\"App\">\n//        <SearchBar onSubmit ={this.handleFormSubmit}/>\n//        <ImageGallery images = {images}/>\n//     </div>\n//   );\n//   // }  \n// }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}